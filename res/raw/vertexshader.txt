precision mediump float;

uniform mat4 modelMatrix;
uniform mat4 viewMatrix;
uniform mat4 modelViewProjectionMatrix;
uniform vec3 lightPosition;

attribute vec3 vertex;
attribute vec3 normalVertex;
attribute vec2 textureVertex;

varying vec3 outVertex;
varying vec3 outNormalVertex;
varying vec3 outEyeDirection;
varying vec3 outLightDirection;
varying vec2 outTextureVertex;

void main()
  {
  outVertex = (modelMatrix * vec4(vertex, 1.0)).xyz;
  outEyeDirection = vec3(0, 0, 0) - (viewMatrix * vec4(vertex, 1.0)).xyz;
  outLightDirection = (viewMatrix * vec4(lightPosition, 1.0)).xyz + outEyeDirection;
  outNormalVertex = (modelMatrix * viewMatrix * vec4(normalVertex, 0.0)).xyz;
  outTextureVertex = textureVertex;
  gl_Position = modelViewProjectionMatrix * vec4(vertex, 1.0);
  }