uniform mat4 viewMatrix;
uniform mat4 modelViewProjectionMatrix;
uniform mat3 normalMatrix;

attribute vec3 vertex;
attribute vec2 texture;
attribute vec3 normal;

varying float color;
varying vec2 texcoord;

const vec3 lightPosition = vec3( 1.0, 1.0, -1.0 );

void main( )
    {
	vec3 position = vec3( viewMatrix * vec4( vertex, 1.0 ) );
	vec3 eyeNormal = normalize( normalMatrix * normal );
	vec3 lightDirection = normalize( lightPosition - position );
	float ndot = max( dot( eyeNormal, lightDirection ), 0.0 );

    color = ndot;
    texcoord = texture;

    gl_Position = modelViewProjectionMatrix * vec4( vertex, 1.0 );
    }